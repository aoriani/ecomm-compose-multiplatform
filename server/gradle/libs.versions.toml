[versions]
expediagroup-graphql    = "9.0.0-alpha.8"
exposed                 = "1.0.0-rc-1"
kotlin-version          = "2.2.20-RC2"
kotlinx-serialization   = "1.9.0"
kotlinx-coroutines-test = "1.10.2"
logback-version         = "1.5.18"
mockk                   = "1.14.5"
sqlite                  = "3.50.2.0"
h2                      = "2.3.232"
mcp                     = "0.6.0"
json-schema             = "1.1.2"

[libraries]
# GraphQL (Expedia Group)
expedia-ktor-server-graphql   = { group = "com.expediagroup", name = "graphql-kotlin-ktor-server", version.ref = "expediagroup-graphql" }
expedia-hooks-provider        = { group = "com.expediagroup", name = "graphql-kotlin-hooks-provider", version.ref = "expediagroup-graphql" }

# GraphQL (Extended Scalars)
graphql-java-extended-scalars = { module = "com.graphql-java:graphql-java-extended-scalars", version = "22.0" }

# Database (Exposed ORM)
exposed-core                  = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao                   = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc                  = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-json                  = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }

# Database (SQLite)
sqlite-jdbc                   = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }

# Database (H2)
h2-jdbc                       = { module = "com.h2database:h2", version.ref = "h2"}

# Kotlin & Serialization
kotlin-test-junit             = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin-version" }
kotlinx-serialization-json    = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-coroutines-test       = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-test" }
mockk                         = { module = "io.mockk:mockk", version.ref = "mockk" }

# Logging
logback-classic               = { module = "ch.qos.logback:logback-classic", version.ref = "logback-version" }

# Model Context Protocol
mcp-kotlin-sdk                = { module = "io.modelcontextprotocol:kotlin-sdk", version.ref = "mcp"}

# Xemantic
json-schema-gen               = { module = "com.xemantic.ai:xemantic-ai-tool-schema", version.ref = "json-schema"}

[plugins]
expediagroup-graphql  = { id = "com.expediagroup.graphql", version.ref = "expediagroup-graphql" }
kotlin-jvm            = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-version" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-version" }