[versions]
agp = "8.11.1"
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "36"
androidx-activityCompose = "1.10.1"
androidx-appcompat = "1.7.1"
androidx-constraintlayout = "2.2.1"
androidx-core-ktx = "1.16.0"
androidx-espresso-core = "3.7.0-rc01"
androidx-lifecycle = "2.9.1"
androidx-material = "1.12.0"
androidx-navigation = "2.9.0-beta04"
androidx-test-junit = "1.2.1"
apollo = "4.3.1"
apollo-adapters-core = "0.7.0"
apollo-engine-ktor = "0.1.1"
coil = "3.3.0"
compose-hotreload = "1.0.0-beta04"
compose-multiplatform = "1.9.0-beta01"

# check Compose multiplatform release notes to check which version of Android Compose it was based on
compose-ui-test-manifest = "1.9.0-beta02"

junit = "4.13.2"
kermit = "2.0.6"
koin = "4.1.0"
kotlin = "2.2.20-Beta1"
kotlinx-collections-immutable = "0.4.0"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization-json = "1.9.0"
ktor = "3.2.2"
material3-adaptive = "1.2.0-alpha09"
roboeletric = "4.15.1"
sqldelight = "2.1.0"

[libraries]

# AndroidX
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-navigation-compose = { group = "org.jetbrains.androidx.navigation", name = "navigation-compose", version.ref = "androidx-navigation" }
androidx-shapes = {module = "org.jetbrains.androidx.graphics:graphics-shapes", version = "1.0.0-alpha09"}
androidx-savedstate = {module = "org.jetbrains.androidx.savedstate:savedstate, version = 1.3.1"}
androidx-window-core = {module = "org.jetbrains.androidx.window:window-core, version = 1.4.0-alpha08"}
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "compose-ui-test-manifest"}

# Apollo
apollo-adapters-core = { group = "com.apollographql.adapters", name = "apollo-adapters-core", version.ref = "apollo-adapters-core" }
apollo-kotlin = { group = "com.apollographql.apollo", name = "apollo-runtime", version.ref = "apollo"}
apollo-ktor = { group = "com.apollographql.ktor", name = "apollo-engine-ktor", version.ref = "apollo-engine-ktor"}

# Coil
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

# Kermit
kermit-main = { module = "co.touchlab:kermit", version.ref = "kermit" }
#kermit-koin = { module = "co.touchlab:kermit-koin", version.ref = "kermit" }
kermit-test = { module = "co.touchlab:kermit-test", version.ref = "kermit" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

# Kotlin
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# KotlinX
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

# Other
junit = { group = "junit", name = "junit", version.ref = "junit" }

# Roboeletric
roboeletric = { module = "org.robolectric:robolectric", version.ref = "roboeletric" }

# SqlDelight
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-jvm-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extension = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-webworker-driver = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqldelight" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
apolloKotlin = { id = "com.apollographql.apollo", version.ref = "apollo" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "compose-hotreload"}
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
powerassert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
